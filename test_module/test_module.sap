@import test_module.a as a
@import test_module.b
@import test_module.b.c
@import test_module.b.d
@import test_module.b.d.e

^{aa: a} = a


recursive_sleep ::= \ 0 -> {
    puts "done"
}

recursive_sleep ::= \ n -> {
    format "sleeping n: {}" n |> puts
    <<- sleep n
    format "sleeping n: {} done" n |> puts
    <<- recursive_sleep (n - 1)
}


 
mymap ::= \f ^[head, ...tail] -> {
    tail = <<- mymap f tail
    format "tail is: {?}" tail |> puts
    e = <<- f head
    format "e is: {?}" e |> puts

    (tail == []) ? {
        [e,]
    } : {
        concat [e,] tail
    }
}

mymap ::= \f [] -> []


main = _{
    arr = [
        a,
        b,
        c,
        d,
        e
    ]
    
    r = <<- (arr |> mymap (\x -> {
        format "x: {}" x |> puts
        <- sleep x
        x
    }) ) 

    format "r: {?}" r |> puts
}